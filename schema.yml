openapi: 3.0.3
info:
  title: Shop API Project
  version: 1.0.0
  description: A sample api for my shop project
paths:
  /api/detail/{id}:
    get:
      operationId: api_detail_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductSerilizer'
          description: ''
    put:
      operationId: api_detail_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductSerilizer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductSerilizer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductSerilizer'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductSerilizer'
          description: ''
    patch:
      operationId: api_detail_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProductSerilizer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProductSerilizer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProductSerilizer'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductSerilizer'
          description: ''
    delete:
      operationId: api_detail_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/list/:
    get:
      operationId: api_list_list
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductSerilizer'
          description: ''
    post:
      operationId: api_list_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductSerilizer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductSerilizer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductSerilizer'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductSerilizer'
          description: ''
  /api/search/:
    get:
      operationId: api_search_list
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductSerilizer'
          description: ''
  /blog/api/:
    get:
      operationId: blog_api_list
      tags:
      - blog
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Post'
          description: ''
    post:
      operationId: blog_api_create
      tags:
      - blog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Post'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Post'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: ''
  /blog/api/{id}/:
    get:
      operationId: blog_api_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - blog
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: ''
    put:
      operationId: blog_api_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - blog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Post'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Post'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: ''
    patch:
      operationId: blog_api_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - blog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPost'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: ''
    delete:
      operationId: blog_api_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - blog
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /blog/api/author/{username}/:
    get:
      operationId: blog_api_author_list
      parameters:
      - in: path
        name: username
        schema:
          type: string
        required: true
      tags:
      - blog
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Post'
          description: ''
  /blog/api/preview/{id}/:
    get:
      operationId: blog_api_preview_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - blog
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: ''
    put:
      operationId: blog_api_preview_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - blog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Post'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Post'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: ''
    patch:
      operationId: blog_api_preview_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - blog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPost'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: ''
    delete:
      operationId: blog_api_preview_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - blog
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /carts/api/add/{id}/:
    post:
      operationId: carts_api_add_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - carts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cart'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Cart'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Cart'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
          description: ''
  /carts/api/delete/{id}/:
    post:
      operationId: carts_api_delete_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - carts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cart'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Cart'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Cart'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
          description: ''
  /carts/api/detail/:
    get:
      operationId: carts_api_detail_retrieve
      tags:
      - carts
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
          description: ''
components:
  schemas:
    Cart:
      type: object
      properties:
        user:
          type: integer
        id:
          type: integer
          readOnly: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/CartItem'
          readOnly: true
      required:
      - id
      - items
      - user
    CartItem:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        item:
          allOf:
          - $ref: '#/components/schemas/ProductSerilizer'
          readOnly: true
        quantity:
          type: integer
          maximum: 2147483647
          minimum: 0
      required:
      - id
      - item
    PatchedPost:
      type: object
      properties:
        title:
          type: string
          maxLength: 100
        body:
          type: string
        status:
          $ref: '#/components/schemas/StatusEnum'
        author:
          type: integer
          nullable: true
        is_special:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        image:
          type: string
          format: uri
          nullable: true
    PatchedProductSerilizer:
      type: object
      properties:
        name:
          type: string
          maxLength: 80
        description:
          type: string
        price:
          type: integer
          maximum: 2147483647
          minimum: 0
        stock:
          type: integer
          maximum: 2147483647
          minimum: 0
        category:
          type: integer
          nullable: true
        image:
          type: string
          format: uri
          nullable: true
        id:
          type: integer
          readOnly: true
    Post:
      type: object
      properties:
        title:
          type: string
          maxLength: 100
        body:
          type: string
        status:
          $ref: '#/components/schemas/StatusEnum'
        author:
          type: integer
          nullable: true
        is_special:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        image:
          type: string
          format: uri
          nullable: true
      required:
      - body
      - created_at
      - status
      - title
      - updated_at
    ProductSerilizer:
      type: object
      properties:
        name:
          type: string
          maxLength: 80
        description:
          type: string
        price:
          type: integer
          maximum: 2147483647
          minimum: 0
        stock:
          type: integer
          maximum: 2147483647
          minimum: 0
        category:
          type: integer
          nullable: true
        image:
          type: string
          format: uri
          nullable: true
        id:
          type: integer
          readOnly: true
      required:
      - description
      - id
      - name
      - price
    StatusEnum:
      enum:
      - p
      - d
      - b
      type: string
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
